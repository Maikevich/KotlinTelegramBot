Полиморфизм - это свойство системы использовать объекты с одинаковым 
интерфейсом без информации о типе и внутренней структуре объекта.
Все if –ы можно заменить на полиморфизм (способ рефакторинга).
Позволяет уменьшать размер программы. 
Пример: интерфейс «охлаждать» имеет место в технике, холодное пиво)) и т.п.
Преимуществом полиморфизма является то, что он помогает снижать сложность программ, 
разрешая использование одного и того же интерфейса для задания единого набора действий. 
Выбор же конкретного действия, в зависимости от ситуации, возлагается на компилятор языка 
программирования. Отсюда следует ключевая особенность полиморфизма - использование 
объекта производного класса, вместо объекта базового (потомки могут изменять родительское 
поведение, даже если обращение к ним будет производиться по ссылке родительского типа).
Unit ref = new Refrigerator("ref", 24);
Полиморфная переменная, это переменная, которая может принимать значения разных типов, 
а полиморфная функция - функция у которой хотя бы один аргумент является полиморфной 
переменной. Выделяют два вида полиморфных функций:
- ad hoc, функция ведет себя по разному для разных типов аргументов (например, функция 
draw() — рисует по разному фигуры разных типов);
- параметрический, функция ведет себя одинаково для аргументов разных типов (например, 
функция add() — одинаково кладет в контейнер элементы разных типов).
Абстрагирование – это способ выделить набор общих характеристик объекта, исключая из 
рассмотрения частные и незначимые. Соответственно, абстракция – это набор всех таких 
характеристик. (телефон звонил в 19 веке и в 21, функция выделена из разных сложных процессов).
Объект-класс-абстрактный класс-Интерфейс (макс. уровень абстракции).