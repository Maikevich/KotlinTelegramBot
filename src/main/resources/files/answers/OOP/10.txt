Single Responsibility Principle (Принцип единственной ответственности).
Класс должен отвечать за одну какую-то логику.
Open Closed Principle (Принцип открытости/закрытости).
программные сущности (классы, модули, функции и т.п.) должны быть открыты для 
расширения, но закрыты для изменения. Расширение с помощью наследников (не меняя сущности 
родителя).
Liskov’s Substitution Principle (Принцип подстановки Барбары Лисков).
объекты в программе можно заменить их наследниками без изменения свойств программы
Interface Segregation Principle (Принцип разделения интерфейса).
клиенты не должны быть вынуждены реализовывать методы, которые они не будут 
использовать. 
Dependency Inversion Principle (Принцип инверсии зависимостей).
зависимости внутри системы строятся на основе абстракций