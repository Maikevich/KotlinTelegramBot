public final void join(). Этот метод приостановит выполнение текущего потока до тех 
пор, пока другой поток не закончит свое выполнение. Если поток прерывается, 
бросается InterruptedException.
Thread t1 = new Thread(new MyRunnable(), "t1");
Thread t2 = new Thread(new MyRunnable(), "t2");
t1.start();
//стартуем 2-й поток только после того, как 1 поток закончит свое выполнение
 try {
 t1.join();
 } catch (InterruptedException e) {
 e.printStackTrace();
 }
 t2.start();
Метод join() имеет перегруженную версию, которая получает в качестве параметра 
время ожидания. В этом случае join() возвращает управление либо когда завершится 
ожидаемый поток, либо когда закончится время ожидания. Подобно методу 
Thread.sleep() метод join может ждать в течение миллисекунд и наносекунд –
аргументы те же.
С помощью задания времени ожидания потока можно, например, выполнять 
обновление анимированной картинки пока главный (или любой другой) поток ждёт 
завершения побочного потока, выполняющего ресурсоёмкие операции