Concurrent Collections (в т.ч. Semaphore) — набор коллекций, более эффективно 
работающие в многопоточной среде нежели стандартные универсальные 
коллекции из java.util пакета. Вместо базового враппера 
Collections.synchronizedList с блокированием доступа ко всей коллекции 
используются блокировки по сегментам данных или же оптимизируется работа 
для параллельного чтения данных по wait-free алгоритмам.
Queues — неблокирующие и блокирующие очереди с поддержкой 
многопоточности. Неблокирующие очереди заточены на скорость и работу без 
блокирования потоков. Блокирующие очереди используются, когда нужно 
«притормозить» потоки «Producer» или «Consumer», если не выполнены какиелибо условия, например, очередь пуста или перепонена, или же нет свободного 
«Consumer»'a.
Synchronizers — вспомогательные утилиты для синхронизации потоков. 
Представляют собой мощное оружие в «параллельных» вычислениях.
Executors — содержит в себе отличные фрейморки для создания пулов потоков, 
планирования работы асинхронных задач с получением результатов.
Locks — представляет собой альтернативные и более гибкие механизмы 
синхронизации потоков по сравнению с базовыми synchronized, wait, notify, 
notifyAll.
Atomics — классы с поддержкой атомарных операций над примитивами и 
ссылками.
