- Объектно-ориентированный: все является объектом. Дополнение может быть легко 
расширено
- Платформонезависимый
- Простой для понимания: основные концепции ООП
- Безопасным: методы проверки подлинности основаны на шифровании с открытым ключом.
- Архитектурно-нейтральным: компилятор генерирует архитектурно-нейтральные объекты 
формата файла, что делает скомпилированный код исполняемым на многих процессорах, с 
наличием системе Java Runtime.
- Портативный: архитектурно-нейтральный и не имеющий зависимости от реализации аспектов 
спецификаций — все это делает Java портативным. Компилятор в Java написан на ANSI C с чистой 
переносимостью, который является подмножеством POSIX.
- Прочный: прилагает усилия, чтобы устранить ошибки в различных ситуациях, делая упор в 
основном на время компиляции, проверку ошибок и проверку во время выполнения.
- Язык для распределенного программирования и комфортной удаленной совместной работы. 
Специфическая для Java методология распределенных вычислений называется Remote Method 
Invocation (RMI). RMI позволяет использовать все преимущества Java: безопасность, 
независимость от платформы и объектно-ориентированное программирование для 
распределенных вычислений
- Автоматическое управление памятью
- Многопоточность
- Стабильность и сообщество