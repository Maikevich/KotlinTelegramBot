Если класс реализует интерфейс, он может, но не обязан, реализовать методы по-умолчанию, 
уже реализованные в интерфейсе. Класс наследует реализацию по умолчанию.
Дефолтные методы можно переопределить.
Если некий класс реализует несколько интерфейсов, которые имеют одинаковый метод по 
умолчанию, то класс должен реализовать метод с совпадающей сигнатурой самостоятельно. 
Ситуация аналогична, если один интерфейс имеет метод по умолчанию, а в другом этот же метод 
является абстрактным - никакой реализации по умолчанию классом не наследуется.
Метод по умолчанию не может переопределить метод класса java.lang.Object.
Помогают реализовывать интерфейсы без страха нарушить работу других классов.
Позволяют избежать создания служебных классов, так как все необходимые методы могут 
быть представлены в самих интерфейсах.
Дают свободу классам выбрать метод, который нужно переопределить.
Одной из основных причин внедрения методов по умолчанию является возможность коллекций 
в Java 8 использовать лямбда-выражения.